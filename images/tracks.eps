%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 203.000000 97.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.5 (Build 19F101) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 203 97
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 203 97
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /t put
dup 34 /y put
dup 35 /u put
dup 36 /lslash put
dup 37 /o put
dup 38 /d put
dup 39 /w put
dup 40 /r put
dup 41 /z put
dup 42 /e put
dup 43 /n put
dup 44 /i put
dup 45 /a put
dup 46 /M put
dup 47 /space put
dup 48 /W put
dup 49 /T put
dup 50 /h put
dup 51 /s put
dup 52 /c put
dup 53 /k put
dup 54 /one put
dup 55 /five put
dup 56 /two put
dup 57 /zero put
dup 58 /U put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/five 5 def
/M 6 def
/T 7 def
/U 8 def
/W 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/h 14 def
/i 15 def
/k 16 def
/n 17 def
/o 18 def
/r 19 def
/s 20 def
/t 21 def
/u 22 def
/w 23 def
/y 24 def
/z 25 def
/lslash 26 def
/uni20BE 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4445087 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281EA889C2D878C3AD50E8F3FE62C0EE5F6306EABD6A13240585D9168F9E9DD38556DC4B344A2B1BEB6CA09985768DF3CD22BBC9EDF132165D7005C2D1C98E4465E857228C33C93384809E714D20D799F34849486E4F51BCC8B7A121C12F03D6374DA43D386AB01EAB5092C3E8EABE227D10A4A15BF196F661B26DE0704DA7AA7848AD6F7ECBD57F6AB316BDF9940BFD28D0FB39E9853AC1616CD554EEEF75C1D6DD78F91E8924F0F39B9518718EAE168A49486BD1F6336116907A7EAFE49C7E4018C1D24C340026EEEF0D7C487AB89F31E03A578F6E2FBE85A591A84829B381BDB8F977CC5AD97F42B498E289699987DE3920944BE97C26F5B5CCA7265976486CDE90CC18A8B40F71C3A25417CBB85ACB0B1077476FDAD08C368838521DCE25410F2EC78C81A13B127A3802F923A777F158D55885D6807098D11278EA198DE1B2FF640D70C9DBB1C6FA1FAB07E14545A8D74B943069D083AD2B23307324AACFF6B10C69E841ACC2998260D9CD5990EF0D426F7D9BF6244FA0FC4041493D21810211DD371F2207BB0E12D130E51E2CF6EB364C2B8F0CF76507521C7072EDB7DCB8E72A20E9F6B52E63F909A813B281727EB1D0504BDB6BEC512DEA45070AF4B1E99CDC8A54C4A9899EB8D60F43C4532B1C083B962E8AA268959B834B0157C65FF00298CE27FFD496658749959CAAEEDD8A039FE04C34C5AA7F150259C9173322DFFDB8803ED1A23C121A6F2C034AD85433B614F00023A66552AE2FB70A439D9F598E51927
B09BA7182B2C8AE05680A74043F0A82BBCD1A58BA79B678CDD1F84EA152365C0B7941578AFDEE14F081AC88902A673FD0313963373767607D2FBFE61589D9BBEFC498E5FEAD8B32DF6535B2D1D69BFC800DCF284E014CF0273D3DBD7D43612B94AB901138B23BC31306CAA05037001174016DA6E9CDAF22B743CE796FB72EC369E790CFDB0DA98938BF0C871CFAE83A077E2BD2F81982F3DB8D6D3CFE49667147C88D7A5DDCA0B8DCAA70486195F1010E27E09477A1F0F21F6DF9C758312F99DA1B38D81591AF99126F7E0BCA7103716541A977127B1D52ABD7781B5DF0137EE08329AEE02D53E24DF0DABCBA24D239DE25ECA25C374448A386102C67FAAA89DBEBD5EA01E7DD4D295DE4D108CA2FFA6ACFC787156DA6407538850FA6E62EBC6A8A0A87063DE406C49F113DD27C2A8FDE68EA39B45D420CD9F11814EAAC6795B248FE9F50E6D531E59E03CA362C93533214F518C37468EED81BE3CAD31EFC4FFDA946BECBACD9817F8E884A74449A6C108B40D2F782E7B8C4DB208E725E89F997D4E24C27BD6806B671AD47639BEB1897EE147155936FB69B0BC8A5318201828BD208F192A77DBB57AF94BD44B3F37BC52F58CAC9C47A06CC277C0E80F24B86B5874E67F5D56EFE6A3C933A3593A62AA03FCACC5833965B5EE772AAEB60EC74CBA1A8B478FA930949FF23F84E813FF7A13246C3D6F6A0E0C2B306B9818E4F10929C451CE125484DBB23C1B69B2DEF7BE6AD188054202825C78C462CD90CB10093272BAF5C7A36E4C22DEF87C1D6D9E7CB8F7832260C4CFA3DE3799F5C3F2C83F71EC88B2C751589C4477C450AD591A72EA118252BB4D12CA92167A143ACFA6E7FC03030848B312E51AF94E38496FABC529499593146E467F6B074055DA0969E033FA9DC961E04C1EBD0B5C475D0DAC78054A10C1E4961918294A85206AD3BE0F57FEB1D73A8FBAD241182CC7A76092F122572943FB0CB59C1F9248FC83999FE54C7E0766A88A597D8DB28F482B367813CCA7E6BA6FA08E5C40A0940839702B380304D9A8A3CE7AFFE9E5FFADE41C9D9A034425BD996F7B2F3C50E089FB873457BADE05D335E2BAA65F5D2FB9BD49A958762D33A75ADA1F22CBC28AE61F1BB669BD88AC7A8896BB99DF02546BA2CFB6FA07F5D835F8B83CA9EE43A12C38A04FFB0570A098EB59F77949472060FE08DE93DF9DA8A429981F35C226D586A1F0CA8F88C96ACE05FC417C3B15EC3CB56F613B72652B077F2F1DEAD76CAF3F791423342E452E85065EA97ED7DF452EAACA4DDAEAAD366393174C7712709147AE9387B8861C6FC5D75F625CA855C2ED9FABB96409606E4265DA9CA92F966168C391FC1C42B647E05194B8F0F24BA001B0AEA88E8B89EF5BD06772DE11FD2838A76F8C98312164E76C63C4DD6534BA1BC39DFB64B9C5BD2E5FCF96767281563F186669C4

1FF1215F83EE4E0BCD3BB7E8626F8EB42F420584AB8FF30497D78ACB30163093AB5EFFF59F481C3FDF8F4D1FFE3C164A3BE3A5F6B814498EF8678D8946805F7AC928E88DAF36A2B59819171562EF0986EB3E5772A22FB18964CC462A561ABA58CBEEDE92E24D7C7A2AA1A298E348E9612A5B28BE84234373A910C19FF4A31E9C924A1BA2C7C82038858D7C2F0432B6BC0125BBF8842D66F54EEBA84579D3E82ED5982440C31A1809A4981909A774A5AA8D3854380653B513E79D443C6922215528C15FE8A39D81F2F306261DBDB5A755CF728EA4711AF552E631A4B38A9193F10EC686E5A291F8E8D7513078BB45FB494D95F00F888C5B18A98398FAA3B73450D81A01BB214732AC4AAA6FE8B52097BF03B6D8C1F41BAC792C35A85470DE68EB673A2E218171056E05384FA07B8D291A1F918B2B193DB9C43CFA003B61ECB9D4C817571AAE2A4AF17303E396A4E558FE10C4AAB72F3C88C203F2E643761162E355012C6AC0432CBFC06FED5EF4CE1F69A290C18E84D1332D5D42CFED0384ADB894B2C617D11A139D744B0EDB59717427C04110016D2566CE57754555E1B502F7A990181E4248073F3E2D379BDFFBA81AD5E64015BA461EDB7A32DA869C7CB8460034D5487A009AD14AE9112D1FA11088D7DB81CA2BF75B39552D9CAA88029BCCA87BE518D4441841B7045923FF2276F761507D5A0D2E5E48FE2C1FC6E24A25EA015B0AC7696E9BBDB5BB04BF9D15DA1F7F9CDF7BCDF4D75E731A17EF33085EDCD28657D0D025464E52718B992AC0E8FAEB80C3E989607D281EB36CF71C1A8E39F44D9551609A8358F5E9BE1A86D00EBDBEC0AD1099309FF22F5C91B0BF994BE9DA6210FA32F2005297B2DDC21B8F4DF5DF3FFF19DF852DBDA751DFA2BB578A6DB5B94F0A7DAE529A06C704EEBA7EA26FE4902783ED9027B356C1CE5A917CDB1B28B5B8D3FEB5EC49328B4668EEB0103D8879228144D618845FD00327162C3ED9254D68ACF5B5F3ECCF0453F7CCF7BB727923CB43D443D524A676795C988586DDE59EF553F252A2BA705CA6F0EE9DDFDAEE49181F0FC59A947689B4152ED33CDE60AF045EFA175CDBA58950823075EFD3F7A42F00177FA1405374DE558A98FD0D3CFBB556F66CE6F134A24D4D5CAAC35E3804FD9B6B263D57868CF39C7EE440ECBE8FFBDD89E9C94BC0D00F737F8AF38101D3C6C8FABFE003E4209DA41A5AD888B4DFD47EBE178349D78A08FD9518B09EF729DC0EE1918CD43D2BE948D247F1657CC928E9A2FD616BE47E11701B3E9CE6B0E2562A1B988FADB2A0218FB3DA03373E16A5F8E7FC373749370A1903F7AE22DDDBD2F85C7AC3A8DAEC5DFBE880847F6C72A958BFBC787E2115A7A12693BFAFBFC590C004FA6F292882CC4FEC25A8B3EC41E1A02D8FB207F998EADA37273E079ED55335E7C16B3F764A05BA8A10091D
74633B1EC5F99F3484C88E32A3641E3468577FACBBD2CA68BAAB766966783B5C976AB3E5186D78D7B5A49965A4C0ECCE7461BCA1A233B1337DB85AE7D0BE3104B51F06EF0550983AF34125E66E7C7D182C1F1DB45ED3B32AAEE84BBE57D2DB7E5CF8A50E6F64039DC44F55BEDE291B79CB2E8AFAC25D778D0A0CF0E2009D2A5A8322D0758A478BDECC0A2282B0C6576A8E201397F45EE62D350A9AF04467B86B2E4F5D9FFEF7845D37DBB84E138CE0D7BF1E650480EDE1F741B635F720D5D5ED7A5EF46184A4CB15FB7F02ABAA062223D6C3AAD19127514A87846D94F10D6F07867386F58C9CB00343C5BFBA908601EFF397ADD6C8BCFC87912E2868C092BDCAE08B26B0CB6B04B7355B7567249BB95E28FAC8FCE8C0DFCADD2D8D67EC981457A1508C17A2BA764B688C576DCF6D38F36E677BF646AD966431060D652EC16724FF266CF482FBE64EFF17533C93BC48E8FD037418722317381D66AECD9EF1409C99156A33D1BB000E56160CF0E9C1279871E2DBE7C3179F8450519EA4771133F0CE408E18F72287CF6F035783EEECFA8639DC54000B6FD1D2DB0A3C127C4206F2AF466974F0D402C44204ABA043441E9BCCF2879CF264FC6EDA3EC7CD732609A773ADA7854EF249B6B242CF38E341C76B1E5EC01E352AB86229186C70D3939EDE42AEE3A94304B6791D03BCE1EE9CB827AA336004C1850655F5E9D7951EF46D22E6CCE183A7BECCF6C100D6F8DBDCBA64E717C653BBB0F8ADBE014A9ED82EF63F175B159FCF5D08D07D503D8D2D7008C08B4AEFAEE3C1E28C526B87A039761822D5E2A9AF42A92BB851D676D8F60ECE31C102C42BE31D88E4C01E575A7BBAECBCCFC6B2DD718401AD3948452ACA93A047EFF1D11F706B363446A47D3586D860C3A57CDF043B8235E410D86942506029F613DB42907ADFA1FE75561666013CA00F5EFC8C312F9BC9A424B518C6025F8ADFA9D7D8E795FC54477975B5D43311E707DAD53AE2F4B8A4A5DEB3A711C4B911DD27519CC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 203 97 rc
0 97 m
203 97 l
203 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-14 109 m
275 109 l
275 -72 l
-14 -72 l
h
-14 109 m
f
0.5625 w
1 J
1 j
0.60000002 i
/Cs3 SC
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 46.125 m
137.16455 46.125 l
137.16455 66.75 l
21.375 66.75 l
h
21.375 46.125 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
26.375 60.269501 m
(!"!#$)[ 3.780000 6.000000 3.780000 6.672000 0.000000 ] xS
/Cs2 SC
195 0 0 21 7 42 cm
BI
/Width 585
/Height 63
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
riLa'KS"c,JV&H)JV&H)JV*9@ri,nfJcD5>JcC<$JcDVIrhTOHJ`;IEJ`;7?J`;7?J`;7?nDaG_rkX0b
R/V[9Jc:6"VZ-Rjre5q&L]2l(Jc:6"Jc:6"Jc>0<rmLe^Jc;&9Jc:6"Jc;PGrhTOIJc1B&Jc1/uJc1/u
Jc1/upAOmfrmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/uJc1/uJc1/upAOmfrmLe]Jc1u7Jc1/uJc2JE
rhTOIJc1B&Jc1/uJc1/uJc1/upAOmfrmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/uJc1/uJc1/unGW@7
rkO*`R/MU7Jc1/uVZ$Lire5q%L])f&Jc1/uJc1/uJc5*:rmLe]Jc1u7Jc1/uJc2JErhTOIJc1B&Jc1/u
Jc1/uJc1/unGW@7rkO*`R/MU7Jc1/uVZ$Lire5q$L\u`$Jc()sJc()sJc,6>qu-NBrkO*_R/DO5Jc()s
VYpFhre5q$L\u`$Jc()sJc()sJc,6>qu-NBrkO*_R/DO5Jc()sVYpFhre5q$L\u`$Jc()sJc()sJc,6>
qu-NBrkO*_R/DO5Jc()sVYpFhre5q#L\lZ"Jbt#qJbt#qJc#0<qu$H@rkF$]R/;I3Jbt#qYP\+mrhTOI
Jbt6"Jbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbuYJq#(,ere5q#L\lZ"Jbt#qJbt#qJc#0<qu$H@
rkF$]R/;I3Jbt#qYP\+mrhTOIJbt6"Jbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbu>ArhTOIJbu#8
roO%4roEhNJbt#qJbt#qJbt#qpA=abrmC_[Jbti3Jbt#qJbu>ArhTOIJbu#8r^?V`r]^)RJbt#qJbt#q
Jbt#qpA=abrmC_[Jbti3Jbt#qJbu>ArhTOIcMIO"qdKJY[efu_qdKJYZhjYhqZ-UYp\KI;JbjroJbjro
Jbo*:qtpB>rkF$\R/2C1JbjroYPS%krhTOIcMIN0qZ-UW[eftmqZ-UWZhjYhqZ-UYp\KI;JbjroJbjro
Jbo*:qtpB>rkF$\R/2C1JbjroYPS%krhTOIcMIN0qZ-UW[eftmqZ-UWZhjYhqZ-UYp\KI;JbjroJbjro
Jbo*:qtpB>rkF$\R/2C1JbjroYPS%krhTOIcM@H/qZ-UW[e]nlqZ-UWZhaSgqZ-UYp\BC9JbalmJbalm
Jbf$8qtg<=rk<sZR/)=/JbalmYPItirhTOIcM@H/qZ-UW[e]nlqZ-UWZhaSgqZ-UYp\BC9JbalmJbalm
Jbf$8qtg<=rk<sZR/)=/JbalmYPItirhTOIfD5F;qss_SqZ-UUq""=Uq"!J@rq-!Vrq$$Xr^?V`r]0cE
rq?6brq?6[rq5OOrq6'Wp%eSTqZ-UYp\BC9JbalmJbalmJbf$8qtg<=rk<sZR/)=/JbalmYPItirhTOI
fCf+^joGC3r\sTPrmL'(rpp%(qZ-U@rYsu"rdjt>r[I^Erb1QhrbVH3rY+ttr^6P_r]L2Br^m*p!;1p9
Jb=TeJb=TeJbAa0qtL*8rk*gTR.Z%'Jb=TeYP%\brhTOIfCf+^joGC3rdabDrd*i%rjDM$rd4V`joGC3
qt9q)qZ-V/l1P$lqZ-U/p%A;OqZ-U0rZqICriuOsJb=TeJb=TeJb=Tep@\=Wrm(MUJb>E'Jb=TeJb?5>
q"Oc`re8tsr[Ht0rdk()rWE#trZg\#raG[(rW3#Nr[Ht0rdjt>rYPG3rb1QhrbVH3rY+ttr^65VriuOs
Jb=TeJb=TeJb=Tep@\=Wrm(MUJb>E'Jb=TeJb?5>q"Oc`re8tproa17r\jWRr\XE+roj@Pr_<.frk@jl
rpB[sqZ-U^rpp'Oqq_60qZ-UPptbr5qss_%qZ-V.l14ghqZ-U.p%&)Ko`4u!rp0XUJb"B_Jb"B_Jb"B_
p@A+QrlkARJb#3!Jb"B_Jb$#8q"4Q]re8Ygr^?V`r]0Q?riZ"rrb1ckri>eorh&lSr^?V`r]0H<rYGA2
rb(KdrbMB2rY#"sro!c$qZ-U!rf[-KJb"B_Jb"B_Jb"B_p@A+QrlkARJb#3!Jb"B_Jb$#8q"4Q]re8Yg
r^?V`r]0Q?rp]n.qZ-U0rpTFKr`T*urXo.qp%&)MqZ-UUn+-GnqZ-V.l14ghqZ-U.qssa-rZLt9r]BlF
Jb"B_Jb"B_Jb"B_p@A+QrlkARJb#3!Jb"B_Jb$#8q"4Q]re8Ycr^6P_r]'B7rd4D?ri5YZroX1hqZ-V,
o'ZKEqZ-UTn*^/jqZ-V,l0eObqZ-U.rpKd2rX8B!r]9fAJaS*WJaS*WJaS*Wp?qhJrlY5NJaSonJaS*W
JaT`0q!e9Yre8Ycr^6P_r]'B7rmguMqZ-Upp$VgRp]1<0o'ZKEqZ-UTn*^/jqZ-V,l0eObqZ-U.rpKcu
nc8YMp[3V#JaS*WJaS*WJaW7"qsj[.rjdUJR-oOnJaS*WYO;2TrhTOIcL1[!qZ-UTm-ajFqZ-U&ro<eA
r_WIlr[mU,r^6P_r]'B7rYGA2rak?^rb;60rY#4urk/46rfI+FqZ-UVp[3V#JaS*WJaS*WJaW7"qsj[.
rjdUJR-oOnJaS*WYO;2TrhTOHcKbBqqZ-USm-=SJp]1;[qs+1<rX&H%reBn,r^-J^r\s<2rYGA2rab9Y
rb)*.rY#4qrn[Rerp'JJqZ-UUpZd=pJa.gOJa.gOJa2soqsOI)rjRIDR-K7fJa.gOYNkoMrhTOHcKbBq
qZ-USm-=T6rZ(e8r^-MIrgEW`rWiGVn*9m=qZ-USn*9lfqZ-V+l0A7XqZ-U.p$2NAqZ-UUpZd=pJa.gO
Ja.gOJa2soqsOI)rjRIDR-K7fJa.gOYNkoMrhTOHcKbBqqZ-USl0A7lqZ-Ttrmq)6r^cndr_VtHr^-J^
r\s<2rYGA2rab9Yr^?V`rY"nhr]p>\r]0`<Ja.gOJa.gOJa.gOp?MPCrlG)JJa/WfJa.gOJa0H(q!J'V
re/SZr]p>\r\s*(rltEDqZ-VKrn.2SqZ-Vnm,n:4qZ-USn)jTcqZ-V%l/qseqZ-U.p#c6<qZ-UTpZ@%h
J`_OGJ`_OGJ`c[gqs47$rj@=>R-&t^J`_OGYNGWFrhTOHcK>*kqZ-USk2uY4qZ-UMrfI!WrYtjtm,n:4
qZ-USn)jU#qZ-U[m,n;Dp]1:+p#c6<qZ-UTpZ@%hJ`_OGJ`_OGJ`c[gqs47$rj@=>R-&t^J`_OGYNGWF
rhTOHcK>*kqZ-UKk2uZ;p]1:9qZ-V9l/qt1qZ-UKn)jU<qZ-U%rlalprn78tp]1:+p#c6<qZ-UTpZ@%h
J`_OGJ`_OGJ`c[gqs47$rj@=>R-&t^J`_OGYNGWFrhTOHcJnguqZ-U"rg<]%rl>#go&BZ,rYb8,rl+-]
r_E=jrW`@hrkeZTrmgo*rb_E1r\+8eqr7V5ri,l:o`4t'p#>s7qZ-USpYpb`J`;7?J`;7?J`?C_qrn$t
rj.18R,W\VJ`;7?YN#??rhTOHcJnh<mf<?2n)F=do`4tQk2QATmf<?2qr7V#rWr9!rWN3Jr\"0Vmf<>!
p#>s7qZ-USpYpb`J`;7?J`;7?J`?C_qrn$trj.18R,W\VJ`;7?YN#??rhTOHcJni6rWD]krcdhjrlP-@
p]1;Vk2QBNrWD]krce.srd<i.r\+8&qZ-U-p#>s7qZ-USpYpb`J`;7?J`;7?J`?C_qrn$trj.18R,W\V
J`;7?YN#??rhTOHbMN5hr]'ldrW2lrrdX:kr\aQQrXJkYj50d+r]'ldrW2lrrdXUtrh]T5nc8Y#rb2;`
regRQrXnh[r]L&Xr]p57J_kt7J_kt7J_kt7p>5].rkeZ>J_ldNJ_kt7J_mTepuD@Lre.*(rn%,\qZ-V#
\_d>'rg<\>rfmD`rn,KPJ_kt7J_kt7J_kt7p>5].rkeZ>J_ldNJ_kt7J_mTepuD@Lre.*(rf6aRriq%2
oA5&TJ_kt7J_kt7J_p+WqrRgoriq%2R,3DNJ_kt7YMT'7rhTOHVqV.'r\+-Kr[NKQnCiHIJ_G\/J_G\/
J_KhOqr7Ujri^n,R+d,FJ_G\/YM/d0rhTOHZeGE1rm:Prrc%W4rf)K_nCiHIJ_G\/J_G\/J_KhOqr7Uj
ri^n,R+d,FJ_G\/YM/d0rhTOHZeGDorWW9UrYG8/rZ(pgJ_KVIJ_G\/J_G\/J_G\/p=fE'rkSN:J_HLF
J_G\/J_I<]pu).Ire.W/rk.e%rWE.pJ_'5>J_#D'J_#D'J_#D'p=B,urkAB6J_$4>J_#D'J_%$UptbqF
re.W/rk%h'rX]!eJ_',;J_#D'J_#D'J_#D'p=B,urkAB6J_$4>J_#D'J_%$UptbqFre.W/rmLe8rd=]k
rg<]*J_'#8J_#D'J_#D'J_#D'p=B,urkAB6J_$4>J_#D'J_%$UptbqFre,jNLXLb%J^T+tJ^T+tJ^X8?
qqM+^ri:UuR*pQ6J^T+tYL<4"rhTOHJ^T>%J^T+tJ^T+tJ^T+tp<rimrk&01J^Tq6J^T+tJ^UaMptG_C
re,jNLXLb%J^T+tJ^T+tJ^X8?qqM+^ri:UuR*pQ6J^T+tYL<4"rhTOHJ^0%rJ^/hlJ^/hlJ^/hlp<NQf
rji$-J^0Y.J^/hlJ^1IEpt#G?re,jJLX(IrJ^/hlJ^/hlJ^3u7qq1nYri(IoR*L9.J^/hlYKlporhTOH
J^0%rJ^/hlJ^/hlJ^/hlp<NQfrji$-J^0Y.J^/hlJ^1IEpt#G?re,jGLWb7lJ]iVfJ]iVfJ]mc1qpk\U
rhk=jR*1'(J]iVfYKQ^irhTOHJ]ihlJ]iVfJ]iVfJ]iVfp<3?`rj_s*J]jG(J]iVfJ]k7?ps]5<re,jG
LWb7lJ]iVfJ]iVfJ]mc1qpk\Urhk=jR*1'(J]iVfYKQ^irhTOHJ_l1=J_kt7J_kt7J_kt7p>5].rkeZ%
rlp#NS)/_QJ_kt7YMT'8rhTOGJZ":$JZ"'sJZ"'sJZ"'sp8@eerg`tTrlp#NS)/_QJ_kt7YMT'8rlBYB
KS"c,JV&H)JV&H)JV*9@rfR3CJbPZ.JbO`iJbQABq"T@
~> %APLeod
EI
0.60000002 i
/Cs3 SC
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 46.125 m
216 46.125 l
216 66.75 l
137.16455 66.75 l
h
137.16455 46.125 m
S
/Cs1 SC
0 sc
0 i
142.16455 60.269501 m
(%&!'%\(\)*+,-)[ 6.888000 7.116000 3.780000 9.096000 6.888000 3.996000 5.760000 6.444000 6.672000 2.664000 0.000000 ] xS
/Cs3 SC
0.95328563 0.95330793 0.95329589 sc
CM
7.375 21.625 m
123.16456 21.625 l
123.16456 1 l
7.375 1 l
h
7.375 21.625 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 87.375 m
137.16455 87.375 l
137.16455 108 l
21.375 108 l
h
21.375 87.375 m
S
/Cs1 SC
0 sc
0 i
26.375 101.5195 m
(."/0-")[ 10.452000 6.000000 3.336000 10.668000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
7.375 42.25 m
123.16456 42.25 l
123.16456 21.625 l
7.375 21.625 l
h
7.375 42.25 m
f
0.60000002 i
/Cs3 SC
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
21.375 66.75 m
137.16455 66.75 l
137.16455 87.375 l
21.375 87.375 l
h
21.375 66.75 m
S
/Cs1 SC
0 sc
0 i
26.375 80.894501 m
(12#+&*\(3!\(#45)[ 6.888000 6.672000 6.672000 6.672000 7.116000 6.444000 3.996000 6.000000 3.780000 3.996000 6.672000 6.444000 0.000000 ] xS
/Cs3 SC
0.95328563 0.95330793 0.95329589 sc
CM
123.16456 21.625 m
202 21.625 l
202 1 l
123.16456 1 l
h
123.16456 21.625 m
f
0.60000002 i
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 87.375 m
216 87.375 l
216 108 l
137.16455 108 l
h
137.16455 87.375 m
S
/Cs1 SC
0 sc
0 i
142.16455 101.5195 m
(67)[ 6.672000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
123.16456 42.25 m
202 42.25 l
202 21.625 l
123.16456 21.625 l
h
123.16456 42.25 m
f
0.60000002 i
/Cs3 SC
0.51037663 0.51038915 0.51038235 sc
1 0 0 -1 -14 109 cm
137.16455 66.75 m
216 66.75 l
216 87.375 l
137.16455 87.375 l
h
137.16455 66.75 m
S
/Cs1 SC
0 sc
0 i
142.16455 80.894501 m
(89)[ 6.672000 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
19.446499 32 m
(:!'%\(")[ 11.552000 5.040000 12.128000 9.184000 5.328000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
